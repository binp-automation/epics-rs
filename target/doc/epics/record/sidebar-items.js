initSidebarItems({"enum":[["AnyHandlerBox","Any boxed handler wrapper"],["AnyReadRecord","Any readable record wrapper"],["AnyRecord","Any record wrapper - could contain any record"],["AnyWriteRecord","Any writable record wrapper"],["RecordType","Record type"]],"struct":[["AiPrivate","Analog input private data"],["AiRecord","Analog input record"],["AoPrivate","Analog output private data"],["AoRecord","Analog output record"],["BiPrivate","Binary input private data"],["BiRecord","Binary input record"],["BoPrivate","Binary output private data"],["BoRecord","Binary output record"],["CommonPrivate","Common private data"],["LonginPrivate","Long input private data"],["LonginRecord","Long (32-bit integer) input record"],["LongoutPrivate","Long output private data"],["LongoutRecord","Long (32-bit integer) output record"],["Scan","Scan handle for process requests from outside"],["StringinPrivate","String input private data"],["StringinRecord","String input record"],["StringoutPrivate","String output private data"],["StringoutRecord","String output record"]],"trait":[["AiHandler","Handler trait for analog input"],["AoHandler","Handler trait for analog output"],["BiHandler","Handler trait for binary input"],["BoHandler","Handler trait for binary output"],["FromRaw","Record that could be emerged from raw pointer"],["LinconvRecord","Record that can perform linconv (only AiRecord and AoRecord)"],["LonginHandler","Handler trait for long input"],["LongoutHandler","Handler trait for long output"],["Private","Private data in record"],["ReadHandler","Handler for records that could be read"],["ReadRecord","Readable record behavior"],["Record","Behavior that is common for all records"],["ScanHandler","Handler for scannable records"],["ScanRecord","Scannable record behavior"],["StringinHandler","Handler trait for string input"],["StringoutHandler","Handler trait for string output"],["WriteHandler","Handler for records that could be written"],["WriteRecord","Writable record behavior"]]});